package com.ait.serviceImpl;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.HttpStatusCode;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.reactive.function.client.WebClient;

import com.ait.bean.TicketResponse;
import com.ait.service.MakeMyTripTrainService;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import reactor.core.Disposable;
import reactor.core.publisher.Mono;

import org.springframework.web.client.HttpClientErrorException;
import org.springframework.web.client.RestClient;
@Service
public class MakeMyTripTrainServiceImpl implements MakeMyTripTrainService {
@Autowired
	WebClient webClient;

	@Override
	public List<TicketResponse> getAllTicketFromIRCTC() {
		 List<TicketResponse> block = webClient.get()
		             .uri("/tickets")
		             .retrieve()
		             .bodyToMono(new ParameterizedTypeReference<List<TicketResponse>>() {})
		             .block();
		return block;
	}

	@Override
	public TicketResponse bookTicket(TicketResponse ticket) throws JsonProcessingException {
		
		
		return  null;
	}

	@Override
	public TicketResponse updateTicket(TicketResponse ticket) throws JsonProcessingException {
		return ticket;
	
	}

	@Override
	public void deleteTicket(Long id) {
		
		
	}

	@Override
	public TicketResponse getTicketById(Long id) {
		return null;
	
		
		
		
	}

}
